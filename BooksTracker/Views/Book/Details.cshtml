@{
    ViewData["Title"] = "Details";
    string dueDateTense = ViewBag.Book == null ? "" : ViewBag.Book.DueDate > DateTime.Now.Date ? "is" : "was";
}



@{
    if (ViewBag.Error != null && ViewBag.Error.GetType() != typeof(BooksTracker.Models.Exceptions.OverdueException))
    {
        <h1>Details</h1>
        <p class="alert-danger">@(ViewBag.Error.Message)</p>
    }
    else
    {
        <h1>Details - @(ViewBag.Book.ID)</h1>
        if (ViewBag.Error != null)
        {
            <p class="alert-danger">@(ViewBag.Error.Message)</p>
        }

        <p>@($"You checked out {ViewBag.Book.Title} on {ViewBag.Book.CheckedOutDate.ToLongDateString()}, and it {dueDateTense} due on {ViewBag.Book.DueDate.ToLongDateString()}.")</p>

        <section>
            <h2>Book Details</h2>
            <p>Title: @(ViewBag.Book.Title)</p>
            <p>Author: @(ViewBag.Book.Author.Name)</p>
            <p>Publication Date: @(ViewBag.Book.PublicationDate.ToLongDateString())</p>
        </section>
        <section>
            <h2>Library Details</h2>
            <p>Checked Out Date: @(ViewBag.Book.CheckedOutDate.ToLongDateString())</p>
            <p>Due Date: @(ViewBag.Book.DueDate.ToLongDateString())</p>
            <p>Returned Date: @(ViewBag.Book.ReturnedDate == null?"Not Returned":((DateTime)ViewBag.Book.ReturnedDate).ToLongDateString())</p>
            <p>Extensions Granted:@(ViewBag.Book.ExtensionCount)</p>
        </section>
        <a class="btn btn-primary" href="/Book/Details?id=@(ViewBag.Book.ID)&command=return">Return Book @(ViewBag.Book.ID) - @(ViewBag.Book.Title)</a>
        <a class="btn btn-secondary" href="/Book/Details?id=@(ViewBag.Book.ID)&command=extend">Extend Deadline of @(ViewBag.Book.ID) - @(ViewBag.Book.Title)</a>
        <a class="btn btn-danger" href="/Book/Details?id=@(ViewBag.Book.ID)&command=delete">Delete @(ViewBag.Book.ID) - @(ViewBag.Book.Title)</a>
    }
}

<!-- // Code borowed: https://github.com/TECHCareers-by-Manpower/4.1-MVC/tree/master/MVC_4Point1 -->
